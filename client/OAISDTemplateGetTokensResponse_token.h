/**
 * Stardust API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-06-15T19:52:41Z
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISDTemplateGetTokensResponse_token.h
 *
 * 
 */

#ifndef OAISDTemplateGetTokensResponse_token_H
#define OAISDTemplateGetTokensResponse_token_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAISDTemplateGetTokensResponse_token_props.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace stardust {
namespace core {
class OAISDTemplateGetTokensResponse_token_props;

class OAISDTemplateGetTokensResponse_token : public OAIObject {
public:
    OAISDTemplateGetTokensResponse_token();
    OAISDTemplateGetTokensResponse_token(QString json);
    ~OAISDTemplateGetTokensResponse_token() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getAmount() const;
    void setAmount(const QString &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    qint32 getTemplateId() const;
    void setTemplateId(const qint32 &template_id);
    bool is_template_id_Set() const;
    bool is_template_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAISDTemplateGetTokensResponse_token_props getProps() const;
    void setProps(const OAISDTemplateGetTokensResponse_token_props &props);
    bool is_props_Set() const;
    bool is_props_Valid() const;

    OAIObject getPublicMetadata() const;
    void setPublicMetadata(const OAIObject &public_metadata);
    bool is_public_metadata_Set() const;
    bool is_public_metadata_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    qint32 template_id;
    bool m_template_id_isSet;
    bool m_template_id_isValid;

    QString name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAISDTemplateGetTokensResponse_token_props props;
    bool m_props_isSet;
    bool m_props_isValid;

    OAIObject public_metadata;
    bool m_public_metadata_isSet;
    bool m_public_metadata_isValid;
};

} // namespace stardust
} // namespace core

Q_DECLARE_METATYPE(stardust::core::OAISDTemplateGetTokensResponse_token)

#endif // OAISDTemplateGetTokensResponse_token_H
