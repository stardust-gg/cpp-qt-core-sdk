/**
 * Stardust API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-06-15T19:52:41Z
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISDGameGetResponse_fees_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace stardust {
namespace core {

OAISDGameGetResponse_fees_inner::OAISDGameGetResponse_fees_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISDGameGetResponse_fees_inner::OAISDGameGetResponse_fees_inner() {
    this->initializeModel();
}

OAISDGameGetResponse_fees_inner::~OAISDGameGetResponse_fees_inner() {}

void OAISDGameGetResponse_fees_inner::initializeModel() {

    m_fee_percentage_isSet = false;
    m_fee_percentage_isValid = false;

    m_fee_type_isSet = false;
    m_fee_type_isValid = false;
}

void OAISDGameGetResponse_fees_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISDGameGetResponse_fees_inner::fromJsonObject(QJsonObject json) {

    m_fee_percentage_isValid = ::stardust::core::fromJsonValue(fee_percentage, json[QString("feePercentage")]);
    m_fee_percentage_isSet = !json[QString("feePercentage")].isNull() && m_fee_percentage_isValid;

    m_fee_type_isValid = ::stardust::core::fromJsonValue(fee_type, json[QString("feeType")]);
    m_fee_type_isSet = !json[QString("feeType")].isNull() && m_fee_type_isValid;
}

QString OAISDGameGetResponse_fees_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISDGameGetResponse_fees_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_fee_percentage_isSet) {
        obj.insert(QString("feePercentage"), ::stardust::core::toJsonValue(fee_percentage));
    }
    if (m_fee_type_isSet) {
        obj.insert(QString("feeType"), ::stardust::core::toJsonValue(fee_type));
    }
    return obj;
}

qint32 OAISDGameGetResponse_fees_inner::getFeePercentage() const {
    return fee_percentage;
}
void OAISDGameGetResponse_fees_inner::setFeePercentage(const qint32 &fee_percentage) {
    this->fee_percentage = fee_percentage;
    this->m_fee_percentage_isSet = true;
}

bool OAISDGameGetResponse_fees_inner::is_fee_percentage_Set() const{
    return m_fee_percentage_isSet;
}

bool OAISDGameGetResponse_fees_inner::is_fee_percentage_Valid() const{
    return m_fee_percentage_isValid;
}

QString OAISDGameGetResponse_fees_inner::getFeeType() const {
    return fee_type;
}
void OAISDGameGetResponse_fees_inner::setFeeType(const QString &fee_type) {
    this->fee_type = fee_type;
    this->m_fee_type_isSet = true;
}

bool OAISDGameGetResponse_fees_inner::is_fee_type_Set() const{
    return m_fee_type_isSet;
}

bool OAISDGameGetResponse_fees_inner::is_fee_type_Valid() const{
    return m_fee_type_isValid;
}

bool OAISDGameGetResponse_fees_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_fee_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fee_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISDGameGetResponse_fees_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace stardust
} // namespace core
