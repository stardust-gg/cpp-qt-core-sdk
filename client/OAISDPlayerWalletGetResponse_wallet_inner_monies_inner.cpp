/**
 * Stardust API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2023-07-25T00:59:12Z
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISDPlayerWalletGetResponse_wallet_inner_monies_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace stardust {
namespace core {

OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::OAISDPlayerWalletGetResponse_wallet_inner_monies_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::OAISDPlayerWalletGetResponse_wallet_inner_monies_inner() {
    this->initializeModel();
}

OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::~OAISDPlayerWalletGetResponse_wallet_inner_monies_inner() {}

void OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;
}

void OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::stardust::core::fromJsonValue(amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_currency_isValid = ::stardust::core::fromJsonValue(currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;
}

QString OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::stardust::core::toJsonValue(amount));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::stardust::core::toJsonValue(currency));
    }
    return obj;
}

QString OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::getAmount() const {
    return amount;
}
void OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::setAmount(const QString &amount) {
    this->amount = amount;
    this->m_amount_isSet = true;
}

bool OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::getCurrency() const {
    return currency;
}
void OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::setCurrency(const QString &currency) {
    this->currency = currency;
    this->m_currency_isSet = true;
}

bool OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::is_currency_Valid() const{
    return m_currency_isValid;
}

bool OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISDPlayerWalletGetResponse_wallet_inner_monies_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace stardust
} // namespace core
